{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_Chart = _resolveComponent(\"Chart\");\n\n  return _openBlock(), _createBlock(_component_Chart, {\n    type: \"line\",\n    width: _ctx.width,\n    height: _ctx.height,\n    data: _ctx.data,\n    options: _ctx.options\n  }, null, 8\n  /* PROPS */\n  , [\"width\", \"height\", \"data\", \"options\"]);\n}","map":{"version":3,"sources":["D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\src\\components\\simple-line-chart-3\\Main.vue"],"names":[],"mappings":";;;;uBACE,YAAA,CAME,gBANF,EAME;AALA,IAAA,IAAI,EAAC,MAKL;AAJC,IAAA,KAAK,EAAE,IAAA,CAAA,KAIR;AAHC,IAAA,MAAM,EAAE,IAAA,CAAA,MAGT;AAFC,IAAA,IAAI,EAAE,IAAA,CAAA,IAEP;AADC,IAAA,OAAO,EAAE,IAAA,CAAA;AACV,GANF,E,IAAA,E;;AAAA,I,sCAAA,C","sourcesContent":["<template>\n  <Chart\n    type=\"line\"\n    :width=\"width\"\n    :height=\"height\"\n    :data=\"data\"\n    :options=\"options\"\n  />\n</template>\n\n<script>\nimport { defineComponent, computed } from 'vue'\n\nexport default defineComponent({\n  props: {\n    width: {\n      type: Number,\n      default: 0\n    },\n    height: {\n      type: Number,\n      default: 0\n    }\n  },\n  setup() {\n    const data = computed(() => {\n      return {\n        labels: [\n          'Jan',\n          'Feb',\n          'Mar',\n          'Apr',\n          'May',\n          'Jun',\n          'Jul',\n          'Aug',\n          'Sep',\n          'Oct',\n          'Nov',\n          'Dec'\n        ],\n        datasets: [\n          {\n            label: '# of Votes',\n            data: [0, 200, 250, 200, 500, 450, 850, 1050, 950, 1100, 900, 1200],\n            borderWidth: 2,\n            borderColor: '#3160D8',\n            backgroundColor: 'transparent',\n            pointBorderColor: 'transparent'\n          },\n          {\n            label: '# of Votes',\n            data: [0, 300, 400, 560, 320, 600, 720, 850, 690, 805, 1200, 1010],\n            borderWidth: 2,\n            borderDash: [2, 2],\n            borderColor: '#98a8b9',\n            backgroundColor: 'transparent',\n            pointBorderColor: 'transparent'\n          }\n        ]\n      }\n    })\n    const options = computed(() => {\n      return {\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [\n            {\n              ticks: {\n                display: false\n              },\n              gridLines: {\n                display: false\n              }\n            }\n          ],\n          yAxes: [\n            {\n              ticks: {\n                display: false\n              },\n              gridLines: {\n                display: false\n              }\n            }\n          ]\n        }\n      }\n    })\n\n    return {\n      data,\n      options\n    }\n  }\n})\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}