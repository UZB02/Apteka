{"ast":null,"code":"import cash from 'cash-dom';\nimport TomSelect from 'tom-select';\n\nvar setValue = function setValue(el, props) {\n  if (props.modelValue.length) {\n    cash(el).val(props.modelValue);\n  }\n};\n\nvar init = function init(el, emit, computedOptions) {\n  el.TomSelect = new TomSelect(el, computedOptions);\n  el.TomSelect.on('change', function (selectedItems) {\n    emit('update:modelValue', selectedItems);\n  });\n};\n\nvar reInit = function reInit(el, props, emit, computedOptions) {\n  el.TomSelect.destroy();\n  cash(el).html(cash(el).prev().html());\n  setValue(el, props);\n  init(el, emit, computedOptions);\n};\n\nexport { setValue, init, reInit };","map":{"version":3,"sources":["D:/Apteka Vue/Pharmacy-main/Pharmacy-main/src/global-components/tom-select/index.js"],"names":["cash","TomSelect","setValue","el","props","modelValue","length","val","init","emit","computedOptions","on","selectedItems","reInit","destroy","html","prev"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,UAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,EAAD,EAAKC,KAAL,EAAe;AAC9B,MAAIA,KAAK,CAACC,UAAN,CAAiBC,MAArB,EAA6B;AAC3BN,IAAAA,IAAI,CAACG,EAAD,CAAJ,CAASI,GAAT,CAAaH,KAAK,CAACC,UAAnB;AACD;AACF,CAJD;;AAMA,IAAMG,IAAI,GAAG,SAAPA,IAAO,CAACL,EAAD,EAAKM,IAAL,EAAWC,eAAX,EAA+B;AAC1CP,EAAAA,EAAE,CAACF,SAAH,GAAe,IAAIA,SAAJ,CAAcE,EAAd,EAAkBO,eAAlB,CAAf;AACAP,EAAAA,EAAE,CAACF,SAAH,CAAaU,EAAb,CAAgB,QAAhB,EAA0B,UAASC,aAAT,EAAwB;AAChDH,IAAAA,IAAI,CAAC,mBAAD,EAAsBG,aAAtB,CAAJ;AACD,GAFD;AAGD,CALD;;AAOA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACV,EAAD,EAAKC,KAAL,EAAYK,IAAZ,EAAkBC,eAAlB,EAAsC;AACnDP,EAAAA,EAAE,CAACF,SAAH,CAAaa,OAAb;AACAd,EAAAA,IAAI,CAACG,EAAD,CAAJ,CAASY,IAAT,CACEf,IAAI,CAACG,EAAD,CAAJ,CACGa,IADH,GAEGD,IAFH,EADF;AAKAb,EAAAA,QAAQ,CAACC,EAAD,EAAKC,KAAL,CAAR;AACAI,EAAAA,IAAI,CAACL,EAAD,EAAKM,IAAL,EAAWC,eAAX,CAAJ;AACD,CATD;;AAWA,SAASR,QAAT,EAAmBM,IAAnB,EAAyBK,MAAzB","sourcesContent":["import cash from 'cash-dom'\nimport TomSelect from 'tom-select'\n\nconst setValue = (el, props) => {\n  if (props.modelValue.length) {\n    cash(el).val(props.modelValue)\n  }\n}\n\nconst init = (el, emit, computedOptions) => {\n  el.TomSelect = new TomSelect(el, computedOptions)\n  el.TomSelect.on('change', function(selectedItems) {\n    emit('update:modelValue', selectedItems)\n  })\n}\n\nconst reInit = (el, props, emit, computedOptions) => {\n  el.TomSelect.destroy()\n  cash(el).html(\n    cash(el)\n      .prev()\n      .html()\n  )\n  setValue(el, props)\n  init(el, emit, computedOptions)\n}\n\nexport { setValue, init, reInit }\n"]},"metadata":{},"sourceType":"module"}