{"ast":null,"code":"import { defineComponent, provide, ref, onMounted } from 'vue';\nexport default defineComponent({\n  props: {\n    tag: {\n      type: String,\n      default: 'span'\n    }\n  },\n  setup: function setup() {\n    var tippyRef = ref();\n    provide('bind[sideMenuTooltipRef]', function (el) {\n      tippyRef.value = el;\n    });\n\n    var toggleTooltip = function toggleTooltip() {\n      var el = tippyRef.value;\n\n      if (cash(window).width() <= 1260) {\n        el._tippy.enable();\n      } else {\n        el._tippy.disable();\n      }\n    };\n\n    var initTooltipEvent = function initTooltipEvent() {\n      window.addEventListener('resize', function () {\n        toggleTooltip();\n      });\n    };\n\n    onMounted(function () {\n      toggleTooltip();\n      initTooltipEvent();\n    });\n  }\n});","map":{"version":3,"sources":["D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\src\\components\\side-menu-tooltip\\Main.vue"],"names":[],"mappings":"AAaA,SAAS,eAAT,EAA0B,OAA1B,EAAmC,GAAnC,EAAwC,SAAxC,QAAyD,KAAzD;AAEA,eAAe,eAAe,CAAC;AAC7B,EAAA,KAAK,EAAE;AACL,IAAA,GAAG,EAAE;AACH,MAAA,IAAI,EAAE,MADH;AAEH,MAAA,OAAO,EAAE;AAFN;AADA,GADsB;AAO7B,EAAA,KAP6B,mBAOrB;AACN,QAAM,QAAO,GAAI,GAAG,EAApB;AAEA,IAAA,OAAO,CAAC,0BAAD,EAA6B,UAAA,EAAC,EAAK;AACxC,MAAA,QAAQ,CAAC,KAAT,GAAiB,EAAjB;AACD,KAFM,CAAP;;AAIA,QAAM,aAAY,GAAI,SAAhB,aAAgB,GAAM;AAC1B,UAAM,EAAC,GAAI,QAAQ,CAAC,KAApB;;AACA,UAAI,IAAI,CAAC,MAAD,CAAJ,CAAa,KAAb,MAAwB,IAA5B,EAAkC;AAChC,QAAA,EAAE,CAAC,MAAH,CAAU,MAAV;AACF,OAFA,MAEO;AACL,QAAA,EAAE,CAAC,MAAH,CAAU,OAAV;AACF;AACF,KAPA;;AASA,QAAM,gBAAe,GAAI,SAAnB,gBAAmB,GAAM;AAC7B,MAAA,MAAM,CAAC,gBAAP,CAAwB,QAAxB,EAAkC,YAAM;AACtC,QAAA,aAAa;AACd,OAFD;AAGF,KAJA;;AAMA,IAAA,SAAS,CAAC,YAAM;AACd,MAAA,aAAa;AACb,MAAA,gBAAgB;AACjB,KAHQ,CAAT;AAIF;AAjC6B,CAAD,CAA9B","sourcesContent":["<template>\n  <Tippy\n    :tag=\"tag\"\n    :options=\"{\n      placement: 'left'\n    }\"\n    ref-key=\"sideMenuTooltipRef\"\n  >\n    <slot></slot>\n  </Tippy>\n</template>\n\n<script>\nimport { defineComponent, provide, ref, onMounted } from 'vue'\n\nexport default defineComponent({\n  props: {\n    tag: {\n      type: String,\n      default: 'span'\n    }\n  },\n  setup() {\n    const tippyRef = ref()\n\n    provide('bind[sideMenuTooltipRef]', el => {\n      tippyRef.value = el\n    })\n\n    const toggleTooltip = () => {\n      const el = tippyRef.value\n      if (cash(window).width() <= 1260) {\n        el._tippy.enable()\n      } else {\n        el._tippy.disable()\n      }\n    }\n\n    const initTooltipEvent = () => {\n      window.addEventListener('resize', () => {\n        toggleTooltip()\n      })\n    }\n\n    onMounted(() => {\n      toggleTooltip()\n      initTooltipEvent()\n    })\n  }\n})\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}