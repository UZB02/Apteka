{"ast":null,"code":"import { renderSlot as _renderSlot, resolveDirective as _resolveDirective, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  ref: \"sliderRef\",\n  class: \"tiny-slider\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _directive_slider = _resolveDirective(\"slider\");\n\n  return _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_renderSlot(_ctx.$slots, \"default\")], 512\n  /* NEED_PATCH */\n  )), [[_directive_slider, {\n    props: _ctx.props,\n    emit: _ctx.emit\n  }]]);\n}","map":{"version":3,"sources":["D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\src\\global-components\\tiny-slider\\Main.vue"],"names":[],"mappings":";;AACO,EAAA,GAAG,EAAC,W;AAAuC,EAAA,KAAK,EAAC;;;;;wCAAtD,mBAAA,CAEM,KAFN,EAAA,UAAA,EAEM,CADJ,WAAA,CAAa,IAAA,CAAA,MAAb,EAAa,SAAb,CACI,CAFN,E;;AAAA,G;WAAiC,IAAA,CAAA,K;AAAK,IAAA,IAAA,EAAE,IAAA,CAAA","sourcesContent":["<template>\n  <div ref=\"sliderRef\" v-slider=\"{ props, emit }\" class=\"tiny-slider\">\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, inject, onMounted, ref } from 'vue'\nimport { init, reInit } from './index'\n\nexport default defineComponent({\n  directives: {\n    slider: {\n      mounted(el, { value }) {\n        init(el, value.props)\n      },\n      updated(el) {\n        reInit(el)\n      }\n    }\n  },\n  props: {\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    refKey: {\n      type: String,\n      default: null\n    }\n  },\n  setup(props, context) {\n    const sliderRef = ref()\n    const bindInstance = () => {\n      if (props.refKey) {\n        const bind = inject(`bind[${props.refKey}]`)\n        if (bind) {\n          bind(sliderRef.value)\n        }\n      }\n    }\n\n    onMounted(() => {\n      bindInstance()\n    })\n\n    return {\n      props,\n      ...context,\n      sliderRef\n    }\n  }\n})\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}