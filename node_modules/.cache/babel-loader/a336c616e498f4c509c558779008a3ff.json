{"ast":null,"code":"import _objectSpread from \"D:/Apteka Vue/Pharmacy-main/Pharmacy-main/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { reactive } from 'vue';\nimport dayjs from 'dayjs';\nimport Litepicker from 'litepicker';\nvar litePickerInstance = reactive({});\n\nvar getDateFormat = function getDateFormat(format) {\n  return format !== undefined ? format : 'D MMM, YYYY';\n};\n\nvar setValue = function setValue(props, emit) {\n  var format = getDateFormat(props.options.format);\n\n  if (!props.modelValue.length) {\n    var date = dayjs().format(format);\n    date += !props.options.singleMode && props.options.singleMode !== undefined ? ' - ' + dayjs().add(1, 'month').format(format) : '';\n    emit('update:modelValue', date);\n  }\n};\n\nvar init = function init(el, props, emit) {\n  var format = getDateFormat(props.options.format);\n  litePickerInstance = new Litepicker(_objectSpread(_objectSpread({\n    element: el\n  }, props.options), {}, {\n    format: format,\n    setup: function setup(picker) {\n      picker.on('selected', function (startDate, endDate) {\n        var date = dayjs(startDate.dateInstance).format(format);\n        date += endDate !== undefined ? ' - ' + dayjs(endDate.dateInstance).format(format) : '';\n        emit('update:modelValue', date);\n      });\n    }\n  }));\n};\n\nvar reInit = function reInit(el, props, emit) {\n  litePickerInstance.destroy();\n  init(el, props, emit);\n};\n\nexport { setValue, init, reInit };","map":{"version":3,"sources":["D:/Apteka Vue/Pharmacy-main/Pharmacy-main/src/global-components/litepicker/index.js"],"names":["reactive","dayjs","Litepicker","litePickerInstance","getDateFormat","format","undefined","setValue","props","emit","options","modelValue","length","date","singleMode","add","init","el","element","setup","picker","on","startDate","endDate","dateInstance","reInit","destroy"],"mappings":";AAAA,SAASA,QAAT,QAAyB,KAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,IAAIC,kBAAkB,GAAGH,QAAQ,CAAC,EAAD,CAAjC;;AAEA,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,MAAM,EAAI;AAC9B,SAAOA,MAAM,KAAKC,SAAX,GAAuBD,MAAvB,GAAgC,aAAvC;AACD,CAFD;;AAIA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,IAAR,EAAiB;AAChC,MAAMJ,MAAM,GAAGD,aAAa,CAACI,KAAK,CAACE,OAAN,CAAcL,MAAf,CAA5B;;AACA,MAAI,CAACG,KAAK,CAACG,UAAN,CAAiBC,MAAtB,EAA8B;AAC5B,QAAIC,IAAI,GAAGZ,KAAK,GAAGI,MAAR,CAAeA,MAAf,CAAX;AACAQ,IAAAA,IAAI,IACF,CAACL,KAAK,CAACE,OAAN,CAAcI,UAAf,IAA6BN,KAAK,CAACE,OAAN,CAAcI,UAAd,KAA6BR,SAA1D,GACI,QACAL,KAAK,GACFc,GADH,CACO,CADP,EACU,OADV,EAEGV,MAFH,CAEUA,MAFV,CAFJ,GAKI,EANN;AAOAI,IAAAA,IAAI,CAAC,mBAAD,EAAsBI,IAAtB,CAAJ;AACD;AACF,CAbD;;AAeA,IAAMG,IAAI,GAAG,SAAPA,IAAO,CAACC,EAAD,EAAKT,KAAL,EAAYC,IAAZ,EAAqB;AAChC,MAAMJ,MAAM,GAAGD,aAAa,CAACI,KAAK,CAACE,OAAN,CAAcL,MAAf,CAA5B;AACAF,EAAAA,kBAAkB,GAAG,IAAID,UAAJ;AACnBgB,IAAAA,OAAO,EAAED;AADU,KAEhBT,KAAK,CAACE,OAFU;AAGnBL,IAAAA,MAAM,EAAEA,MAHW;AAInBc,IAAAA,KAAK,EAAE,eAAAC,MAAM,EAAI;AACfA,MAAAA,MAAM,CAACC,EAAP,CAAU,UAAV,EAAsB,UAACC,SAAD,EAAYC,OAAZ,EAAwB;AAC5C,YAAIV,IAAI,GAAGZ,KAAK,CAACqB,SAAS,CAACE,YAAX,CAAL,CAA8BnB,MAA9B,CAAqCA,MAArC,CAAX;AACAQ,QAAAA,IAAI,IACFU,OAAO,KAAKjB,SAAZ,GACI,QAAQL,KAAK,CAACsB,OAAO,CAACC,YAAT,CAAL,CAA4BnB,MAA5B,CAAmCA,MAAnC,CADZ,GAEI,EAHN;AAIAI,QAAAA,IAAI,CAAC,mBAAD,EAAsBI,IAAtB,CAAJ;AACD,OAPD;AAQD;AAbkB,KAArB;AAeD,CAjBD;;AAmBA,IAAMY,MAAM,GAAG,SAATA,MAAS,CAACR,EAAD,EAAKT,KAAL,EAAYC,IAAZ,EAAqB;AAClCN,EAAAA,kBAAkB,CAACuB,OAAnB;AACAV,EAAAA,IAAI,CAACC,EAAD,EAAKT,KAAL,EAAYC,IAAZ,CAAJ;AACD,CAHD;;AAKA,SAASF,QAAT,EAAmBS,IAAnB,EAAyBS,MAAzB","sourcesContent":["import { reactive } from 'vue'\nimport dayjs from 'dayjs'\nimport Litepicker from 'litepicker'\n\nlet litePickerInstance = reactive({})\n\nconst getDateFormat = format => {\n  return format !== undefined ? format : 'D MMM, YYYY'\n}\n\nconst setValue = (props, emit) => {\n  const format = getDateFormat(props.options.format)\n  if (!props.modelValue.length) {\n    let date = dayjs().format(format)\n    date +=\n      !props.options.singleMode && props.options.singleMode !== undefined\n        ? ' - ' +\n          dayjs()\n            .add(1, 'month')\n            .format(format)\n        : ''\n    emit('update:modelValue', date)\n  }\n}\n\nconst init = (el, props, emit) => {\n  const format = getDateFormat(props.options.format)\n  litePickerInstance = new Litepicker({\n    element: el,\n    ...props.options,\n    format: format,\n    setup: picker => {\n      picker.on('selected', (startDate, endDate) => {\n        let date = dayjs(startDate.dateInstance).format(format)\n        date +=\n          endDate !== undefined\n            ? ' - ' + dayjs(endDate.dateInstance).format(format)\n            : ''\n        emit('update:modelValue', date)\n      })\n    }\n  })\n}\n\nconst reInit = (el, props, emit) => {\n  litePickerInstance.destroy()\n  init(el, props, emit)\n}\n\nexport { setValue, init, reInit }\n"]},"metadata":{},"sourceType":"module"}