{"ast":null,"code":"export default {\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    expose();\n    /* eslint-disable */\n\n    var goToPage = function goToPage(page) {\n      if (page >= 1 && page <= totalPages.value && page != currentPage.value) {\n        // totalPages.value = res.data.result?.data\n        currentPage.value = page;\n        axios.get('http://pharm-api.kdevs.uz/api/products', {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('token')\n          },\n          params: {\n            page: currentPage.value\n          }\n        }).then(function (res) {\n          var _res$data$result, _res$data$result2;\n\n          data.value = (_res$data$result = res.data.result) === null || _res$data$result === void 0 ? void 0 : _res$data$result.data;\n          totalPages.value = (_res$data$result2 = res.data.result) === null || _res$data$result2 === void 0 ? void 0 : _res$data$result2.last_page;\n        });\n      }\n    };\n\n    var __returned__ = {\n      goToPage: goToPage\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"sources":["D:/Apteka Vue/Pharmacy-main/Pharmacy-main/src/components/pagination/Main.vue"],"names":[],"mappings":";;;;AA0CA;;AACA,QAAM,QAAQ,GAAG,SAAX,QAAW,CAAC,IAAD,EAAU;AACvB,UAAI,IAAI,IAAI,CAAR,IAAa,IAAI,IAAI,UAAU,CAAC,KAAhC,IAAyC,IAAI,IAAI,WAAW,CAAC,KAAjE,EAAwE;AACpE;AACA,QAAA,WAAW,CAAC,KAAZ,GAAoB,IAApB;AACA,QAAA,KAAK,CAAC,GAAN,CAAU,wCAAV,EAAoD;AAChD,UAAA,OAAO,EAAE;AACL,YAAA,aAAa,EAAE,YAAY,YAAY,CAAC,OAAb,CAAqB,OAArB;AADtB,WADuC;AAIhD,UAAA,MAAM,EAAE;AACJ,YAAA,IAAI,EAAE,WAAW,CAAC;AADd;AAJwC,SAApD,EAOG,IAPH,CAOQ,UAAA,GAAG,EAAI;AAAA;;AACX,UAAA,IAAI,CAAC,KAAL,uBAAa,GAAG,CAAC,IAAJ,CAAS,MAAtB,qDAAa,iBAAiB,IAA9B;AACA,UAAA,UAAU,CAAC,KAAX,wBAAmB,GAAG,CAAC,IAAJ,CAAS,MAA5B,sDAAmB,kBAAiB,SAApC;AACH,SAVD;AAWH;AACJ,KAhBD","sourcesContent":["<template>\n    <div class=\"intro-y col-span-12 flex flex-wrap sm:flex-row sm:flex-nowrap items-center\">\n        <ul class=\"pagination\">\n            <li>\n                <span class=\"pagination__link\" @click=\"goToPage(1)\">\n                    <ChevronsLeftIcon class=\"w-4 h-4\" />\n                </span>\n            </li>\n            <li class=\"disabled\">\n                <span class=\"pagination__link\" @click=\"goToPage(currentPage - 1)\">\n                    <ChevronLeftIcon class=\"w-4 h-4\" />\n                </span>\n            </li>\n            <li>\n                <span class=\"pagination__link\" v-if=\"currentPage > 3\">...</span>\n            </li>\n            <li v-for=\"page in totalPages\" :key=\"page\">\n                <span class=\"pagination__link\" :class=\"{ 'pagination__link--active': page === currentPage }\"\n                    @click=\"goToPage(page)\">\n                    {{ page }}\n                </span>\n            </li>\n            <li>\n                <span class=\"pagination__link\" v-if=\"currentPage < totalPages\">...</span>\n            </li>\n            <li>\n                <span class=\"pagination__link\" @click=\"goToPage(currentPage + 1)\">\n                    <ChevronRightIcon class=\"w-4 h-4\" />\n                </span>\n            </li>\n            <li>\n                <span class=\"pagination__link\" @click=\"goToPage(totalPages)\">\n                    <ChevronsRightIcon class=\"w-4 h-4\" />\n                </span>\n            </li>\n        </ul>\n        <select class=\"w-20 form-select box mt-3 sm:mt-0\" v-model=\"currentPage\" @change=\"goToPage(currentPage)\">\n            <option v-for=\"page in totalPages\" :key=\"page\">{{ page }}</option>\n        </select>\n    </div>\n</template>\n<script setup>\n/* eslint-disable */\nconst goToPage = (page) => {\n    if (page >= 1 && page <= totalPages.value && page != currentPage.value) {\n        // totalPages.value = res.data.result?.data\n        currentPage.value = page\n        axios.get('http://pharm-api.kdevs.uz/api/products', {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            },\n            params: {\n                page: currentPage.value\n            }\n        }).then(res => {\n            data.value = res.data.result?.data\n            totalPages.value = res.data.result?.last_page\n        })\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}