{"ast":null,"code":"import _objectSpread from \"D:/Apteka Vue/Pharmacy-main/Pharmacy-main/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { defineComponent, inject, onMounted, ref } from 'vue';\nimport { init, reInit } from './index';\nexport default defineComponent({\n  directives: {\n    slider: {\n      mounted: function mounted(el, _ref) {\n        var value = _ref.value;\n        init(el, value.props);\n      },\n      updated: function updated(el) {\n        reInit(el);\n      }\n    }\n  },\n  props: {\n    options: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    refKey: {\n      type: String,\n      default: null\n    }\n  },\n  setup: function setup(props, context) {\n    var sliderRef = ref();\n\n    var bindInstance = function bindInstance() {\n      if (props.refKey) {\n        var bind = inject(\"bind[\".concat(props.refKey, \"]\"));\n\n        if (bind) {\n          bind(sliderRef.value);\n        }\n      }\n    };\n\n    onMounted(function () {\n      bindInstance();\n    });\n    return _objectSpread(_objectSpread({\n      props: props\n    }, context), {}, {\n      sliderRef: sliderRef\n    });\n  }\n});","map":{"version":3,"sources":["D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\src\\global-components\\tiny-slider\\Main.vue"],"names":[],"mappings":";AAOA,SAAS,eAAT,EAA0B,MAA1B,EAAkC,SAAlC,EAA6C,GAA7C,QAAwD,KAAxD;AACA,SAAS,IAAT,EAAe,MAAf,QAA6B,SAA7B;AAEA,eAAe,eAAe,CAAC;AAC7B,EAAA,UAAU,EAAE;AACV,IAAA,MAAM,EAAE;AACN,MAAA,OADM,mBACE,EADF,QACiB;AAAA,YAAT,KAAS,QAAT,KAAS;AACrB,QAAA,IAAI,CAAC,EAAD,EAAK,KAAK,CAAC,KAAX,CAAJ;AACD,OAHK;AAIN,MAAA,OAJM,mBAIE,EAJF,EAIM;AACV,QAAA,MAAM,CAAC,EAAD,CAAN;AACF;AANM;AADE,GADiB;AAW7B,EAAA,KAAK,EAAE;AACL,IAAA,OAAO,EAAE;AACP,MAAA,IAAI,EAAE,MADC;AAEP,MAAA,OAAO,EAAE;AAAA,eAAO,EAAP;AAAA;AAFF,KADJ;AAKL,IAAA,MAAM,EAAE;AACN,MAAA,IAAI,EAAE,MADA;AAEN,MAAA,OAAO,EAAE;AAFH;AALH,GAXsB;AAqB7B,EAAA,KArB6B,iBAqBvB,KArBuB,EAqBhB,OArBgB,EAqBP;AACpB,QAAM,SAAQ,GAAI,GAAG,EAArB;;AACA,QAAM,YAAW,GAAI,SAAf,YAAe,GAAM;AACzB,UAAI,KAAK,CAAC,MAAV,EAAkB;AAChB,YAAM,IAAG,GAAI,MAAM,gBAAS,KAAK,CAAC,MAAf,OAAnB;;AACA,YAAI,IAAJ,EAAU;AACR,UAAA,IAAI,CAAC,SAAS,CAAC,KAAX,CAAJ;AACF;AACF;AACF,KAPA;;AASA,IAAA,SAAS,CAAC,YAAM;AACd,MAAA,YAAY;AACb,KAFQ,CAAT;AAIA;AACE,MAAA,KAAK,EAAL;AADF,OAEK,OAFL;AAGE,MAAA,SAAQ,EAAR;AAHF;AAKF;AAzC6B,CAAD,CAA9B","sourcesContent":["<template>\n  <div ref=\"sliderRef\" v-slider=\"{ props, emit }\" class=\"tiny-slider\">\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, inject, onMounted, ref } from 'vue'\nimport { init, reInit } from './index'\n\nexport default defineComponent({\n  directives: {\n    slider: {\n      mounted(el, { value }) {\n        init(el, value.props)\n      },\n      updated(el) {\n        reInit(el)\n      }\n    }\n  },\n  props: {\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    refKey: {\n      type: String,\n      default: null\n    }\n  },\n  setup(props, context) {\n    const sliderRef = ref()\n    const bindInstance = () => {\n      if (props.refKey) {\n        const bind = inject(`bind[${props.refKey}]`)\n        if (bind) {\n          bind(sliderRef.value)\n        }\n      }\n    }\n\n    onMounted(() => {\n      bindInstance()\n    })\n\n    return {\n      props,\n      ...context,\n      sliderRef\n    }\n  }\n})\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}