{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_GoogleMapLoader = _resolveComponent(\"GoogleMapLoader\");\n\n  return _openBlock(), _createBlock(_component_GoogleMapLoader, {\n    init: _ctx.init\n  }, null, 8\n  /* PROPS */\n  , [\"init\"]);\n}","map":{"version":3,"sources":["D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\src\\components\\report-map\\Main.vue"],"names":[],"mappings":";;;;uBACE,YAAA,CAAgC,0BAAhC,EAAgC;AAAd,IAAA,IAAI,EAAE,IAAA,CAAA;AAAQ,GAAhC,EAA4B,IAA5B,EAA4B;AAAA;AAA5B,IAA4B,CAAA,MAAA,CAA5B,C","sourcesContent":["<template>\n  <GoogleMapLoader :init=\"init\" />\n</template>\n\n<script>\nimport { defineComponent, watch, computed } from 'vue'\nimport MarkerClusterer from '@googlemaps/markerclustererplus'\nimport { useStore } from '@/store'\n\nexport default defineComponent({\n  props: {\n    width: {\n      type: Number,\n      default: 0\n    },\n    height: {\n      type: Number,\n      default: 0\n    }\n  },\n  setup() {\n    const store = useStore()\n    const darkMode = computed(() => store.state.main.darkMode)\n    const init = async initializeMap => {\n      const darkTheme = [\n        {\n          elementType: 'geometry',\n          stylers: [\n            {\n              color: '#242f3e'\n            }\n          ]\n        },\n        {\n          elementType: 'labels.text.fill',\n          stylers: [\n            {\n              color: '#746855'\n            }\n          ]\n        },\n        {\n          elementType: 'labels.text.stroke',\n          stylers: [\n            {\n              color: '#242f3e'\n            }\n          ]\n        },\n        {\n          featureType: 'administrative.land_parcel',\n          elementType: 'labels',\n          stylers: [\n            {\n              visibility: 'off'\n            }\n          ]\n        },\n        {\n          featureType: 'administrative.land_parcel',\n          elementType: 'labels.text.fill',\n          stylers: [\n            {\n              color: '#bdbdbd'\n            }\n          ]\n        },\n        {\n          featureType: 'administrative.locality',\n          elementType: 'labels.text.fill',\n          stylers: [\n            {\n              color: '#d59563'\n            }\n          ]\n        },\n        {\n          featureType: 'poi',\n          elementType: 'geometry',\n          stylers: [\n            {\n              color: '#eeeeee'\n            }\n          ]\n        },\n        {\n          featureType: 'poi',\n          elementType: 'labels.text',\n          stylers: [\n            {\n              visibility: 'off'\n            }\n          ]\n        },\n        {\n          featureType: 'poi',\n          elementType: 'labels.text.fill',\n          stylers: [\n            {\n              color: '#d59563'\n            }\n          ]\n        },\n        {\n          featureType: 'poi.park',\n          elementType: 'geometry',\n          stylers: [\n            {\n              color: '#263c3f'\n            }\n          ]\n        },\n        {\n          featureType: 'poi.park',\n          elementType: 'geometry.fill',\n          stylers: [\n            {\n              visibility: 'off'\n            }\n          ]\n        },\n        {\n          featureType: 'poi.park',\n          elementType: 'labels.text.fill',\n          stylers: [\n            {\n              color: '#6b9a76'\n            }\n          ]\n        },\n        {\n          featureType: 'road',\n          elementType: 'geometry',\n          stylers: [\n            {\n              color: '#38414e'\n            }\n          ]\n        },\n        {\n          featureType: 'road',\n          elementType: 'geometry.stroke',\n          stylers: [\n            {\n              color: '#212a37'\n            }\n          ]\n        },\n        {\n          featureType: 'road',\n          elementType: 'labels.text.fill',\n          stylers: [\n            {\n              color: '#9ca5b3'\n            }\n          ]\n        },\n        {\n          featureType: 'road.arterial',\n          elementType: 'labels',\n          stylers: [\n            {\n              visibility: 'off'\n            }\n          ]\n        },\n        {\n          featureType: 'road.arterial',\n          elementType: 'labels.text.fill',\n          stylers: [\n            {\n              color: '#757575'\n            }\n          ]\n        },\n        {\n          featureType: 'road.highway',\n          elementType: 'geometry',\n          stylers: [\n            {\n              color: '#746855'\n            }\n          ]\n        },\n        {\n          featureType: 'road.highway',\n          elementType: 'geometry.stroke',\n          stylers: [\n            {\n              color: '#1f2835'\n            }\n          ]\n        },\n        {\n          featureType: 'road.highway',\n          elementType: 'labels',\n          stylers: [\n            {\n              visibility: 'off'\n            }\n          ]\n        },\n        {\n          featureType: 'road.highway',\n          elementType: 'labels.text.fill',\n          stylers: [\n            {\n              color: '#f3d19c'\n            }\n          ]\n        },\n        {\n          featureType: 'road.local',\n          stylers: [\n            {\n              visibility: 'off'\n            }\n          ]\n        },\n        {\n          featureType: 'road.local',\n          elementType: 'labels',\n          stylers: [\n            {\n              visibility: 'off'\n            }\n          ]\n        },\n        {\n          featureType: 'transit',\n          elementType: 'geometry',\n          stylers: [\n            {\n              color: '#2f3948'\n            }\n          ]\n        },\n        {\n          featureType: 'transit.line',\n          elementType: 'geometry',\n          stylers: [\n            {\n              color: '#e5e5e5'\n            }\n          ]\n        },\n        {\n          featureType: 'transit.line',\n          elementType: 'geometry.fill',\n          stylers: [\n            {\n              visibility: 'off'\n            }\n          ]\n        },\n        {\n          featureType: 'transit.station',\n          elementType: 'geometry',\n          stylers: [\n            {\n              color: '#eeeeee'\n            }\n          ]\n        },\n        {\n          featureType: 'transit.station',\n          elementType: 'geometry.fill',\n          stylers: [\n            {\n              visibility: 'off'\n            }\n          ]\n        },\n        {\n          featureType: 'transit.station',\n          elementType: 'labels.text.fill',\n          stylers: [\n            {\n              color: '#d59563'\n            }\n          ]\n        },\n        {\n          featureType: 'water',\n          elementType: 'geometry',\n          stylers: [\n            {\n              color: '#17263c'\n            }\n          ]\n        },\n        {\n          featureType: 'water',\n          elementType: 'geometry.fill',\n          stylers: [\n            {\n              color: '#171f29'\n            }\n          ]\n        },\n        {\n          featureType: 'water',\n          elementType: 'labels.text.fill',\n          stylers: [\n            {\n              color: '#515c6d'\n            }\n          ]\n        },\n        {\n          featureType: 'water',\n          elementType: 'labels.text.stroke',\n          stylers: [\n            {\n              color: '#17263c'\n            }\n          ]\n        }\n      ]\n      const lightTheme = [\n        {\n          elementType: 'geometry',\n          stylers: [\n            {\n              color: '#f5f5f5'\n            }\n          ]\n        },\n        {\n          elementType: 'labels.icon',\n          stylers: [\n            {\n              visibility: 'off'\n            }\n          ]\n        },\n        {\n          elementType: 'labels.text.fill',\n          stylers: [\n            {\n              color: '#616161'\n            }\n          ]\n        },\n        {\n          elementType: 'labels.text.stroke',\n          stylers: [\n            {\n              color: '#f5f5f5'\n            }\n          ]\n        },\n        {\n          featureType: 'administrative.land_parcel',\n          elementType: 'labels',\n          stylers: [\n            {\n              visibility: 'off'\n            }\n          ]\n        },\n        {\n          featureType: 'administrative.land_parcel',\n          elementType: 'labels.text.fill',\n          stylers: [\n            {\n              color: '#bdbdbd'\n            }\n          ]\n        },\n        {\n          featureType: 'poi',\n          elementType: 'geometry',\n          stylers: [\n            {\n              color: '#eeeeee'\n            }\n          ]\n        },\n        {\n          featureType: 'poi',\n          elementType: 'labels.text',\n          stylers: [\n            {\n              visibility: 'off'\n            }\n          ]\n        },\n        {\n          featureType: 'poi',\n          elementType: 'labels.text.fill',\n          stylers: [\n            {\n              color: '#757575'\n            }\n          ]\n        },\n        {\n          featureType: 'poi.park',\n          elementType: 'geometry',\n          stylers: [\n            {\n              color: '#e5e5e5'\n            }\n          ]\n        },\n        {\n          featureType: 'poi.park',\n          elementType: 'geometry.fill',\n          stylers: [\n            {\n              visibility: 'off'\n            }\n          ]\n        },\n        {\n          featureType: 'poi.park',\n          elementType: 'labels.text.fill',\n          stylers: [\n            {\n              color: '#9e9e9e'\n            }\n          ]\n        },\n        {\n          featureType: 'road',\n          elementType: 'geometry',\n          stylers: [\n            {\n              color: '#ffffff'\n            }\n          ]\n        },\n        {\n          featureType: 'road.arterial',\n          elementType: 'labels',\n          stylers: [\n            {\n              visibility: 'off'\n            }\n          ]\n        },\n        {\n          featureType: 'road.arterial',\n          elementType: 'labels.text.fill',\n          stylers: [\n            {\n              color: '#757575'\n            }\n          ]\n        },\n        {\n          featureType: 'road.highway',\n          elementType: 'geometry',\n          stylers: [\n            {\n              color: '#dadada'\n            }\n          ]\n        },\n        {\n          featureType: 'road.highway',\n          elementType: 'labels',\n          stylers: [\n            {\n              visibility: 'off'\n            }\n          ]\n        },\n        {\n          featureType: 'road.highway',\n          elementType: 'labels.text.fill',\n          stylers: [\n            {\n              color: '#616161'\n            }\n          ]\n        },\n        {\n          featureType: 'road.local',\n          stylers: [\n            {\n              visibility: 'off'\n            }\n          ]\n        },\n        {\n          featureType: 'road.local',\n          elementType: 'labels',\n          stylers: [\n            {\n              visibility: 'off'\n            }\n          ]\n        },\n        {\n          featureType: 'road.local',\n          elementType: 'labels.text.fill',\n          stylers: [\n            {\n              color: '#9e9e9e'\n            }\n          ]\n        },\n        {\n          featureType: 'transit.line',\n          elementType: 'geometry',\n          stylers: [\n            {\n              color: '#e5e5e5'\n            }\n          ]\n        },\n        {\n          featureType: 'transit.line',\n          elementType: 'geometry.fill',\n          stylers: [\n            {\n              visibility: 'off'\n            }\n          ]\n        },\n        {\n          featureType: 'transit.station',\n          elementType: 'geometry',\n          stylers: [\n            {\n              color: '#eeeeee'\n            }\n          ]\n        },\n        {\n          featureType: 'transit.station',\n          elementType: 'geometry.fill',\n          stylers: [\n            {\n              visibility: 'off'\n            }\n          ]\n        },\n        {\n          featureType: 'water',\n          elementType: 'geometry',\n          stylers: [\n            {\n              color: '#c9c9c9'\n            }\n          ]\n        },\n        {\n          featureType: 'water',\n          elementType: 'geometry.fill',\n          stylers: [\n            {\n              color: '#e0e3e8'\n            }\n          ]\n        },\n        {\n          featureType: 'water',\n          elementType: 'labels.text.fill',\n          stylers: [\n            {\n              color: '#9e9e9e'\n            }\n          ]\n        }\n      ]\n      const { google, map } = await initializeMap({\n        apiKey: '',\n        config(google) {\n          return {\n            zoom: 10,\n            styles: darkMode.value ? darkTheme : lightTheme,\n            zoomControl: true,\n            zoomControlOptions: {\n              position: google.maps.ControlPosition.LEFT_BOTTOM\n            },\n            streetViewControl: false,\n            center: {\n              lat: -6.2425342,\n              lng: 106.8626478\n            }\n          }\n        }\n      })\n\n      const infoWindow = new google.maps.InfoWindow({\n        minWidth: 400,\n        maxWidth: 400\n      })\n\n      const location = await require('@/assets/json/location.json')\n      new MarkerClusterer(\n        map,\n        location.map(function(markerElem) {\n          const point = new google.maps.LatLng(\n            parseFloat(markerElem.latitude),\n            parseFloat(markerElem.longitude)\n          )\n          const infowincontent = `\n            <div class=\"font-medium\">\n              ${markerElem.name}\n            </div>\n            <div class=\"mt-1 text-gray-600\">\n              Latitude: ${markerElem.latitude}, Longitude: ${markerElem.longitude}\n            </div>`\n          const marker = new google.maps.Marker({\n            map: map,\n            position: point,\n            icon: {\n              url: require('@/assets/images/map-marker.png').default\n            }\n          })\n\n          google.maps.event.addListener(marker, 'click', function() {\n            infoWindow.setContent(infowincontent)\n            google.maps.event.addListener(infoWindow, 'domready', function() {\n              cash('.arrow_box')\n                .closest('.gm-style-iw-d')\n                .removeAttr('style')\n              cash('.arrow_box')\n                .closest('.gm-style-iw-d')\n                .attr('style', 'overflow:visible')\n              cash('.arrow_box')\n                .closest('.gm-style-iw-d')\n                .parent()\n                .removeAttr('style')\n            })\n\n            infoWindow.open(map, marker)\n          })\n          return marker\n        }),\n        {\n          styles: [\n            {\n              width: 51,\n              height: 50,\n              textColor: 'white',\n              url: require('@/assets/images/map-marker-region.png').default,\n              anchor: [0, 0],\n              anchorText: [19, 0],\n              fontWeight: 'bold'\n            }\n          ]\n        }\n      )\n\n      const stop = watch(darkMode, () => {\n        init(initializeMap)\n        stop()\n      })\n    }\n\n    return {\n      init\n    }\n  }\n})\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}