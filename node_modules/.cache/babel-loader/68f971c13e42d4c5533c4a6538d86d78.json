{"ast":null,"code":"import { defineComponent, computed, onMounted, ref, watch } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useStore } from '@/store';\nimport { helper as $h } from '@/utils/helper';\nimport TopBar from '@/components/top-bar/Main.vue';\nimport MobileMenu from '@/components/mobile-menu/Main.vue';\nimport DarkModeSwitcher from '@/components/dark-mode-switcher/Main.vue';\nimport { linkTo, nestedMenu, enter, leave } from '@/layouts/side-menu';\nexport default defineComponent({\n  components: {\n    TopBar: TopBar,\n    MobileMenu: MobileMenu,\n    DarkModeSwitcher: DarkModeSwitcher\n  },\n  setup: function setup() {\n    var route = useRoute();\n    var router = useRouter();\n    var store = useStore();\n    var formattedMenu = ref([]);\n    var simpleMenu = computed(function () {\n      return nestedMenu(store.state.simpleMenu.menu, route);\n    });\n    watch(computed(function () {\n      return route.path;\n    }), function () {\n      formattedMenu.value = $h.toRaw(simpleMenu.value);\n    });\n    onMounted(function () {\n      cash('body').removeClass('error-page').removeClass('login').addClass('main');\n      formattedMenu.value = $h.toRaw(simpleMenu.value);\n    });\n    return {\n      formattedMenu: formattedMenu,\n      router: router,\n      linkTo: linkTo,\n      enter: enter,\n      leave: leave\n    };\n  }\n});","map":{"version":3,"sources":["D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\src\\layouts\\simple-menu\\Main.vue"],"names":[],"mappings":"AAwGA,SAAS,eAAT,EAA0B,QAA1B,EAAoC,SAApC,EAA+C,GAA/C,EAAoD,KAApD,QAAiE,KAAjE;AACA,SAAS,QAAT,EAAmB,SAAnB,QAAoC,YAApC;AACA,SAAS,QAAT,QAAyB,SAAzB;AACA,SAAS,MAAK,IAAK,EAAnB,QAA6B,gBAA7B;AACA,OAAO,MAAP,MAAmB,+BAAnB;AACA,OAAO,UAAP,MAAuB,mCAAvB;AACA,OAAO,gBAAP,MAA6B,0CAA7B;AACA,SAAS,MAAT,EAAiB,UAAjB,EAA6B,KAA7B,EAAoC,KAApC,QAAiD,qBAAjD;AAEA,eAAe,eAAe,CAAC;AAC7B,EAAA,UAAU,EAAE;AACV,IAAA,MAAM,EAAN,MADU;AAEV,IAAA,UAAU,EAAV,UAFU;AAGV,IAAA,gBAAe,EAAf;AAHU,GADiB;AAM7B,EAAA,KAN6B,mBAMrB;AACN,QAAM,KAAI,GAAI,QAAQ,EAAtB;AACA,QAAM,MAAK,GAAI,SAAS,EAAxB;AACA,QAAM,KAAI,GAAI,QAAQ,EAAtB;AACA,QAAM,aAAY,GAAI,GAAG,CAAC,EAAD,CAAzB;AACA,QAAM,UAAS,GAAI,QAAQ,CAAC;AAAA,aAC1B,UAAU,CAAC,KAAK,CAAC,KAAN,CAAY,UAAZ,CAAuB,IAAxB,EAA8B,KAA9B,CADgB;AAAA,KAAD,CAA3B;AAIA,IAAA,KAAK,CACH,QAAQ,CAAC;AAAA,aAAM,KAAK,CAAC,IAAZ;AAAA,KAAD,CADL,EAEH,YAAM;AACJ,MAAA,aAAa,CAAC,KAAd,GAAsB,EAAE,CAAC,KAAH,CAAS,UAAU,CAAC,KAApB,CAAtB;AACF,KAJG,CAAL;AAOA,IAAA,SAAS,CAAC,YAAM;AACd,MAAA,IAAI,CAAC,MAAD,CAAJ,CACG,WADH,CACe,YADf,EAEG,WAFH,CAEe,OAFf,EAGG,QAHH,CAGY,MAHZ;AAIA,MAAA,aAAa,CAAC,KAAd,GAAsB,EAAE,CAAC,KAAH,CAAS,UAAU,CAAC,KAApB,CAAtB;AACD,KANQ,CAAT;AAQA,WAAO;AACL,MAAA,aAAa,EAAb,aADK;AAEL,MAAA,MAAM,EAAN,MAFK;AAGL,MAAA,MAAM,EAAN,MAHK;AAIL,MAAA,KAAK,EAAL,KAJK;AAKL,MAAA,KAAI,EAAJ;AALK,KAAP;AAOF;AArC6B,CAAD,CAA9B","sourcesContent":["<template>\n  <div>\n    <DarkModeSwitcher />\n    <MobileMenu />\n    <div class=\"flex\">\n      <!-- BEGIN: Simple Menu -->\n      <nav class=\"side-nav side-nav--simple\">\n        <!-- BEGIN: Logo -->\n        <router-link :to=\"{ name: 'simple-menu-dashboard-overview-1' }\" tag=\"a\"\n          class=\"intro-x flex items-center pl-5 pt-4\">\n          <img alt=\"Icewall Tailwind HTML Admin Template\" class=\"w-6\" src=\"@/assets/images/logo.svg\" />\n        </router-link>\n        <!-- END: Logo -->\n        <div class=\"side-nav__devider my-6\"></div>\n        <ul>\n          <!-- BEGIN: First Child -->\n          <template v-for=\"(menu, menuKey) in formattedMenu\">\n            <li v-if=\"menu == 'devider'\" :key=\"menu + menuKey\" class=\"side-nav__devider my-6\"></li>\n            <li v-else :key=\"menu + menuKey\">\n              <Tippy tag=\"a\" :content=\"menu.title\" :options=\"{\n                placement: 'left'\n              }\" :href=\"menu.subMenu\n    ? 'javascript:;'\n    : router.resolve({ name: menu.pageName }).path\n  \" class=\"side-menu\" :class=\"{\n    'side-menu--active': menu.active,\n    'side-menu--open': menu.activeDropdown\n  }\" @click=\"linkTo(menu, router, $event)\">\n                <div class=\"side-menu__icon\">\n                  <component :is=\"menu.icon\" />\n                </div>\n                <div class=\"side-menu__title\">\n                  {{ menu.title }}\n                  <ChevronDownIcon v-if=\"$h.isset(menu.subMenu)\" class=\"side-menu__sub-icon\"\n                    :class=\"{ 'transform rotate-180': menu.activeDropdown }\" />\n                </div>\n              </Tippy>\n              <!-- BEGIN: Second Child -->\n              <transition @enter=\"enter\" @leave=\"leave\">\n                <ul v-if=\"$h.isset(menu.subMenu) && menu.activeDropdown\">\n                  <li v-for=\"(subMenu, subMenuKey) in menu.subMenu\" :key=\"subMenuKey\">\n                    <Tippy tag=\"a\" :content=\"subMenu.title\" :options=\"{\n                      placement: 'left'\n                    }\" :href=\"subMenu.subMenu\n    ? 'javascript:;'\n    : router.resolve({ name: subMenu.pageName }).path\n  \" class=\"side-menu\" :class=\"{ 'side-menu--active': subMenu.active }\"\n                      @click=\"linkTo(subMenu, router, $event)\">\n                      <div class=\"side-menu__icon\">\n                        <ActivityIcon />\n                      </div>\n                      <div class=\"side-menu__title\">\n                        {{ subMenu.title }}\n                        <ChevronDownIcon v-if=\"$h.isset(subMenu.subMenu)\" class=\"side-menu__sub-icon\" :class=\"{\n                          'transform rotate-180': subMenu.activeDropdown\n                        }\" />\n                      </div>\n                    </Tippy>\n                    <!-- BEGIN: Third Child -->\n                    <transition @enter=\"enter\" @leave=\"leave\">\n                      <ul v-if=\"$h.isset(subMenu.subMenu) && subMenu.activeDropdown\n                        \">\n                        <li v-for=\"(lastSubMenu,\n                          lastSubMenuKey) in subMenu.subMenu\" :key=\"lastSubMenuKey\">\n                          <Tippy tag=\"a\" :content=\"lastSubMenu.title\" :options=\"{\n                            placement: 'left'\n                          }\" :href=\"lastSubMenu.subMenu\n    ? 'javascript:;'\n    : router.resolve({ name: lastSubMenu.pageName })\n      .path\n  \" class=\"side-menu\" :class=\"{ 'side-menu--active': lastSubMenu.active }\"\n                            @click=\"linkTo(lastSubMenu, router, $event)\">\n                            <div class=\"side-menu__icon\">\n                              <ZapIcon />\n                            </div>\n                            <div class=\"side-menu__title\">\n                              {{ lastSubMenu.title }}\n                            </div>\n                          </Tippy>\n                        </li>\n                      </ul>\n                    </transition>\n                    <!-- END: Third Child -->\n                  </li>\n                </ul>\n              </transition>\n              <!-- END: Second Child -->\n            </li>\n          </template>\n          <!-- END: First Child -->\n        </ul>\n      </nav>\n      <!-- END: Simple Menu -->\n      <!-- BEGIN: Content -->\n      <div class=\"content\">\n        <TopBar />\n        <router-view />\n      </div>\n      <!-- END: Content -->\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, computed, onMounted, ref, watch } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { useStore } from '@/store'\nimport { helper as $h } from '@/utils/helper'\nimport TopBar from '@/components/top-bar/Main.vue'\nimport MobileMenu from '@/components/mobile-menu/Main.vue'\nimport DarkModeSwitcher from '@/components/dark-mode-switcher/Main.vue'\nimport { linkTo, nestedMenu, enter, leave } from '@/layouts/side-menu'\n\nexport default defineComponent({\n  components: {\n    TopBar,\n    MobileMenu,\n    DarkModeSwitcher\n  },\n  setup() {\n    const route = useRoute()\n    const router = useRouter()\n    const store = useStore()\n    const formattedMenu = ref([])\n    const simpleMenu = computed(() =>\n      nestedMenu(store.state.simpleMenu.menu, route)\n    )\n\n    watch(\n      computed(() => route.path),\n      () => {\n        formattedMenu.value = $h.toRaw(simpleMenu.value)\n      }\n    )\n\n    onMounted(() => {\n      cash('body')\n        .removeClass('error-page')\n        .removeClass('login')\n        .addClass('main')\n      formattedMenu.value = $h.toRaw(simpleMenu.value)\n    })\n\n    return {\n      formattedMenu,\n      router,\n      linkTo,\n      enter,\n      leave\n    }\n  }\n})\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}