{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, withModifiers as _withModifiers, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createStaticVNode as _createStaticVNode } from \"vue\";\n\nvar _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"intro-y flex items-center mt-8\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"text-lg font-medium mr-auto\"\n}, \"Form Validation\")], -1\n/* HOISTED */\n);\n\nvar _hoisted_2 = {\n  class: \"grid grid-cols-12 gap-6 mt-5\"\n};\nvar _hoisted_3 = {\n  class: \"intro-y col-span-12 lg:col-span-6\"\n};\nvar _hoisted_4 = {\n  class: \"intro-y box\"\n};\n\nvar _hoisted_5 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"flex flex-col sm:flex-row items-center p-5 border-b border-gray-200 dark:border-dark-5\\\"><h2 class=\\\"font-medium text-base mr-auto\\\">Implementation</h2><div class=\\\"w-full sm:w-auto flex items-center sm:ml-auto mt-3 sm:mt-0\\\"><label class=\\\"form-check-label ml-0 sm:ml-2\\\" for=\\\"show-example-1\\\">Show example code</label><input id=\\\"show-example-1\\\" data-target=\\\"#form-validation\\\" class=\\\"show-code form-check-switch mr-0 ml-3\\\" type=\\\"checkbox\\\"></div></div>\", 1);\n\nvar _hoisted_6 = {\n  id: \"form-validation\",\n  class: \"p-5\"\n};\nvar _hoisted_7 = {\n  class: \"preview\"\n};\nvar _hoisted_8 = {\n  class: \"input-form\"\n};\n\nvar _hoisted_9 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"validation-form-1\",\n  class: \"form-label w-full flex flex-col sm:flex-row\"\n}, [/*#__PURE__*/_createTextVNode(\" Name \"), /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"sm:ml-auto mt-1 sm:mt-0 text-xs text-gray-600\"\n}, \"Required, at least 2 characters\")], -1\n/* HOISTED */\n);\n\nvar _hoisted_10 = {\n  class: \"input-form mt-3\"\n};\n\nvar _hoisted_11 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"validation-form-2\",\n  class: \"form-label w-full flex flex-col sm:flex-row\"\n}, [/*#__PURE__*/_createTextVNode(\" Email \"), /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"sm:ml-auto mt-1 sm:mt-0 text-xs text-gray-600\"\n}, \"Required, email address format\")], -1\n/* HOISTED */\n);\n\nvar _hoisted_12 = {\n  class: \"input-form mt-3\"\n};\n\nvar _hoisted_13 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"validation-form-3\",\n  class: \"form-label w-full flex flex-col sm:flex-row\"\n}, [/*#__PURE__*/_createTextVNode(\" Password \"), /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"sm:ml-auto mt-1 sm:mt-0 text-xs text-gray-600\"\n}, \"Required, at least 6 characters\")], -1\n/* HOISTED */\n);\n\nvar _hoisted_14 = {\n  class: \"input-form mt-3\"\n};\n\nvar _hoisted_15 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"validation-form-4\",\n  class: \"form-label w-full flex flex-col sm:flex-row\"\n}, [/*#__PURE__*/_createTextVNode(\" Age \"), /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"sm:ml-auto mt-1 sm:mt-0 text-xs text-gray-600\"\n}, \"Required, integer only & maximum 3 characters\")], -1\n/* HOISTED */\n);\n\nvar _hoisted_16 = {\n  class: \"input-form mt-3\"\n};\n\nvar _hoisted_17 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"validation-form-5\",\n  class: \"form-label w-full flex flex-col sm:flex-row\"\n}, [/*#__PURE__*/_createTextVNode(\" Profile URL \"), /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"sm:ml-auto mt-1 sm:mt-0 text-xs text-gray-600\"\n}, \"Optional, URL format\")], -1\n/* HOISTED */\n);\n\nvar _hoisted_18 = {\n  class: \"input-form mt-3\"\n};\n\nvar _hoisted_19 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"validation-form-6\",\n  class: \"form-label w-full flex flex-col sm:flex-row\"\n}, [/*#__PURE__*/_createTextVNode(\" Comment \"), /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"sm:ml-auto mt-1 sm:mt-0 text-xs text-gray-600\"\n}, \"Required, at least 10 characters\")], -1\n/* HOISTED */\n);\n\nvar _hoisted_20 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-primary mt-5\"\n}, \" Register \", -1\n/* HOISTED */\n);\n\nvar _hoisted_21 = {\n  id: \"success-notification-content\",\n  class: \"toastify-content hidden flex\"\n};\n\nvar _hoisted_22 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"ml-4 mr-4\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"font-medium\"\n}, \"Registration success!\"), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"text-gray-600 mt-1\"\n}, \" Please check your e-mail for further info! \")], -1\n/* HOISTED */\n);\n\nvar _hoisted_23 = {\n  id: \"failed-notification-content\",\n  class: \"toastify-content hidden flex\"\n};\n\nvar _hoisted_24 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"ml-4 mr-4\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"font-medium\"\n}, \"Registration failed!\"), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"text-gray-600 mt-1\"\n}, \" Please check the fileld form. \")], -1\n/* HOISTED */\n);\n\nvar _hoisted_25 = {\n  class: \"source-code hidden\"\n};\nvar _hoisted_26 = {\n  \"data-target\": \"#copy-form-validation\",\n  class: \"copy-code btn py-1 px-2 btn-outline-secondary\"\n};\n\nvar _hoisted_27 = /*#__PURE__*/_createTextVNode(\" Copy example code \");\n\nvar _hoisted_28 = {\n  class: \"overflow-y-auto mt-3 rounded-md\"\n};\n\nvar _hoisted_29 = /*#__PURE__*/_createElementVNode(\"code\", {\n  class: \"text-xs p-0 rounded-md html pl-5 pt-8 pb-4 -mb-10 -mt-10\"\n}, [/*#__PURE__*/_createElementVNode(\"textarea\", null, \"\\n                      const formData = reactive({\\n                        name: \\\"\\\",\\n                        email: \\\"\\\",\\n                        password: \\\"\\\",\\n                        age: \\\"\\\",\\n                        url: \\\"\\\",\\n                        comment: \\\"\\\"\\n                      });\\n                      const rules = {\\n                        name: {\\n                          required,\\n                          minLength: minLength(2)\\n                        },\\n                        email: {\\n                          required,\\n                          email\\n                        },\\n                        password: {\\n                          required,\\n                          minLength: minLength(6)\\n                        },\\n                        age: {\\n                          required,\\n                          integer,\\n                          maxLength: maxLength(3)\\n                        },\\n                        url: {\\n                          url\\n                        },\\n                        comment: {\\n                          required,\\n                          minLength: minLength(10)\\n                        }\\n                      };\\n                      const validate = useVuelidate(rules, toRefs(formData));\\n                      const save = () => {\\n                        validate.value.$touch();\\n                        console.log(validate.value);\\n                        if (validate.value.$invalid) {\\n                          Toastify({\\n                            text: \\\"Registration failed, please check the fileld form.\\\",\\n                            duration: 3000,\\n                            newWindow: true,\\n                            close: true,\\n                            gravity: \\\"top\\\",\\n                            position: \\\"right\\\",\\n                            backgroundColor: \\\"#D32929\\\",\\n                            stopOnFocus: true,\\n                            className: \\\"toastify-content\\\"\\n                          }).showToast();\\n                        } else {\\n                          Toastify({\\n                            text: \\\"Registration success!\\\",\\n                            duration: 3000,\\n                            newWindow: true,\\n                            close: true,\\n                            gravity: \\\"top\\\",\\n                            position: \\\"right\\\",\\n                            backgroundColor: \\\"#91C714\\\",\\n                            stopOnFocus: true,\\n                            className: \\\"toastify-content\\\"\\n                          }).showToast();\\n                        }\\n                      };\\n                    \")], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_CheckCircleIcon = _resolveComponent(\"CheckCircleIcon\");\n\n  var _component_XCircleIcon = _resolveComponent(\"XCircleIcon\");\n\n  var _component_FileIcon = _resolveComponent(\"FileIcon\");\n\n  var _component_Highlight = _resolveComponent(\"Highlight\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" BEGIN: Form Validation \"), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createCommentVNode(\" BEGIN: Validation Form \"), _createElementVNode(\"form\", {\n    class: \"validate-form\",\n    onSubmit: _cache[6] || (_cache[6] = _withModifiers(function () {\n      return _ctx.save && _ctx.save.apply(_ctx, arguments);\n    }, [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    id: \"validation-form-1\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return _ctx.validate.name.$model = $event;\n    }),\n    type: \"text\",\n    name: \"name\",\n    class: _normalizeClass([\"form-control\", {\n      'border-theme-6': _ctx.validate.name.$error\n    }]),\n    placeholder: \"John Legend\"\n  }, null, 2\n  /* CLASS */\n  ), [[_vModelText, _ctx.validate.name.$model, void 0, {\n    trim: true\n  }]]), _ctx.validate.name.$error ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList(_ctx.validate.name.$errors, function (error, index) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"text-theme-6 mt-2\"\n    }, _toDisplayString(error.$message), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  )) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _withDirectives(_createElementVNode(\"input\", {\n    id: \"validation-form-2\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return _ctx.validate.email.$model = $event;\n    }),\n    type: \"email\",\n    name: \"email\",\n    class: _normalizeClass([\"form-control\", {\n      'border-theme-6': _ctx.validate.email.$error\n    }]),\n    placeholder: \"example@gmail.com\"\n  }, null, 2\n  /* CLASS */\n  ), [[_vModelText, _ctx.validate.email.$model, void 0, {\n    trim: true\n  }]]), _ctx.validate.email.$error ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList(_ctx.validate.email.$errors, function (error, index) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"text-theme-6 mt-2\"\n    }, _toDisplayString(error.$message), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  )) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_12, [_hoisted_13, _withDirectives(_createElementVNode(\"input\", {\n    id: \"validation-form-3\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n      return _ctx.validate.password.$model = $event;\n    }),\n    type: \"password\",\n    name: \"password\",\n    class: _normalizeClass([\"form-control\", {\n      'border-theme-6': _ctx.validate.password.$error\n    }]),\n    placeholder: \"secret\"\n  }, null, 2\n  /* CLASS */\n  ), [[_vModelText, _ctx.validate.password.$model, void 0, {\n    trim: true\n  }]]), _ctx.validate.password.$error ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList(_ctx.validate.password.$errors, function (error, index) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"text-theme-6 mt-2\"\n    }, _toDisplayString(error.$message), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  )) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_14, [_hoisted_15, _withDirectives(_createElementVNode(\"input\", {\n    id: \"validation-form-4\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n      return _ctx.validate.age.$model = $event;\n    }),\n    type: \"number\",\n    name: \"age\",\n    class: _normalizeClass([\"form-control\", {\n      'border-theme-6': _ctx.validate.age.$error\n    }]),\n    placeholder: \"21\"\n  }, null, 2\n  /* CLASS */\n  ), [[_vModelText, _ctx.validate.age.$model, void 0, {\n    trim: true\n  }]]), _ctx.validate.age.$error ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList(_ctx.validate.age.$errors, function (error, index) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"text-theme-6 mt-2\"\n    }, _toDisplayString(error.$message), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  )) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_16, [_hoisted_17, _withDirectives(_createElementVNode(\"input\", {\n    id: \"validation-form-5\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n      return _ctx.validate.url.$model = $event;\n    }),\n    type: \"url\",\n    name: \"url\",\n    class: _normalizeClass([\"form-control\", {\n      'border-theme-6': _ctx.validate.url.$error\n    }]),\n    placeholder: \"https://google.com\"\n  }, null, 2\n  /* CLASS */\n  ), [[_vModelText, _ctx.validate.url.$model, void 0, {\n    trim: true\n  }]]), _ctx.validate.url.$error ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList(_ctx.validate.url.$errors, function (error, index) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"text-theme-6 mt-2\"\n    }, _toDisplayString(error.$message), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  )) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_18, [_hoisted_19, _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"validation-form-6\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = function ($event) {\n      return _ctx.validate.comment.$model = $event;\n    }),\n    class: _normalizeClass([\"form-control\", {\n      'border-theme-6': _ctx.validate.comment.$error\n    }]),\n    name: \"comment\",\n    placeholder: \"Type your comments\"\n  }, null, 2\n  /* CLASS */\n  ), [[_vModelText, _ctx.validate.comment.$model, void 0, {\n    trim: true\n  }]]), _ctx.validate.comment.$error ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList(_ctx.validate.comment.$errors, function (error, index) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"text-theme-6 mt-2\"\n    }, _toDisplayString(error.$message), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  )) : _createCommentVNode(\"v-if\", true)]), _hoisted_20], 32\n  /* HYDRATE_EVENTS */\n  ), _createCommentVNode(\" END: Validation Form \"), _createCommentVNode(\" BEGIN: Success Notification Content \"), _createElementVNode(\"div\", _hoisted_21, [_createVNode(_component_CheckCircleIcon, {\n    class: \"text-theme-9\"\n  }), _hoisted_22]), _createCommentVNode(\" END: Success Notification Content \"), _createCommentVNode(\" BEGIN: Failed Notification Content \"), _createElementVNode(\"div\", _hoisted_23, [_createVNode(_component_XCircleIcon, {\n    class: \"text-theme-6\"\n  }), _hoisted_24]), _createCommentVNode(\" END: Failed Notification Content \")]), _createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"button\", _hoisted_26, [_createVNode(_component_FileIcon, {\n    class: \"w-4 h-4 mr-2\"\n  }), _hoisted_27]), _createElementVNode(\"div\", _hoisted_28, [_createVNode(_component_Highlight, {\n    id: \"copy-form-validation\",\n    class: \"source-preview\"\n  }, {\n    default: _withCtx(function () {\n      return [_hoisted_29];\n    }),\n    _: 1\n    /* STABLE */\n\n  })])])])]), _createCommentVNode(\" END: Form Validation \")])])]);\n}","map":{"version":3,"sources":["D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\src\\views\\validation\\Main.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"intro-y flex items-center mt-8\">\n      <h2 class=\"text-lg font-medium mr-auto\">Form Validation</h2>\n    </div>\n    <div class=\"grid grid-cols-12 gap-6 mt-5\">\n      <div class=\"intro-y col-span-12 lg:col-span-6\">\n        <!-- BEGIN: Form Validation -->\n        <div class=\"intro-y box\">\n          <div\n            class=\"flex flex-col sm:flex-row items-center p-5 border-b border-gray-200 dark:border-dark-5\"\n          >\n            <h2 class=\"font-medium text-base mr-auto\">Implementation</h2>\n            <div\n              class=\"w-full sm:w-auto flex items-center sm:ml-auto mt-3 sm:mt-0\"\n            >\n              <label class=\"form-check-label ml-0 sm:ml-2\" for=\"show-example-1\"\n                >Show example code</label\n              >\n              <input\n                id=\"show-example-1\"\n                data-target=\"#form-validation\"\n                class=\"show-code form-check-switch mr-0 ml-3\"\n                type=\"checkbox\"\n              />\n            </div>\n          </div>\n          <div id=\"form-validation\" class=\"p-5\">\n            <div class=\"preview\">\n              <!-- BEGIN: Validation Form -->\n              <form class=\"validate-form\" @submit.prevent=\"save\">\n                <div class=\"input-form\">\n                  <label\n                    for=\"validation-form-1\"\n                    class=\"form-label w-full flex flex-col sm:flex-row\"\n                  >\n                    Name\n                    <span class=\"sm:ml-auto mt-1 sm:mt-0 text-xs text-gray-600\"\n                      >Required, at least 2 characters</span\n                    >\n                  </label>\n                  <input\n                    id=\"validation-form-1\"\n                    v-model.trim=\"validate.name.$model\"\n                    type=\"text\"\n                    name=\"name\"\n                    class=\"form-control\"\n                    :class=\"{ 'border-theme-6': validate.name.$error }\"\n                    placeholder=\"John Legend\"\n                  />\n                  <template v-if=\"validate.name.$error\">\n                    <div\n                      v-for=\"(error, index) in validate.name.$errors\"\n                      :key=\"index\"\n                      class=\"text-theme-6 mt-2\"\n                    >\n                      {{ error.$message }}\n                    </div>\n                  </template>\n                </div>\n                <div class=\"input-form mt-3\">\n                  <label\n                    for=\"validation-form-2\"\n                    class=\"form-label w-full flex flex-col sm:flex-row\"\n                  >\n                    Email\n                    <span class=\"sm:ml-auto mt-1 sm:mt-0 text-xs text-gray-600\"\n                      >Required, email address format</span\n                    >\n                  </label>\n                  <input\n                    id=\"validation-form-2\"\n                    v-model.trim=\"validate.email.$model\"\n                    type=\"email\"\n                    name=\"email\"\n                    class=\"form-control\"\n                    :class=\"{ 'border-theme-6': validate.email.$error }\"\n                    placeholder=\"example@gmail.com\"\n                  />\n                  <template v-if=\"validate.email.$error\">\n                    <div\n                      v-for=\"(error, index) in validate.email.$errors\"\n                      :key=\"index\"\n                      class=\"text-theme-6 mt-2\"\n                    >\n                      {{ error.$message }}\n                    </div>\n                  </template>\n                </div>\n                <div class=\"input-form mt-3\">\n                  <label\n                    for=\"validation-form-3\"\n                    class=\"form-label w-full flex flex-col sm:flex-row\"\n                  >\n                    Password\n                    <span class=\"sm:ml-auto mt-1 sm:mt-0 text-xs text-gray-600\"\n                      >Required, at least 6 characters</span\n                    >\n                  </label>\n                  <input\n                    id=\"validation-form-3\"\n                    v-model.trim=\"validate.password.$model\"\n                    type=\"password\"\n                    name=\"password\"\n                    class=\"form-control\"\n                    :class=\"{ 'border-theme-6': validate.password.$error }\"\n                    placeholder=\"secret\"\n                  />\n                  <template v-if=\"validate.password.$error\">\n                    <div\n                      v-for=\"(error, index) in validate.password.$errors\"\n                      :key=\"index\"\n                      class=\"text-theme-6 mt-2\"\n                    >\n                      {{ error.$message }}\n                    </div>\n                  </template>\n                </div>\n                <div class=\"input-form mt-3\">\n                  <label\n                    for=\"validation-form-4\"\n                    class=\"form-label w-full flex flex-col sm:flex-row\"\n                  >\n                    Age\n                    <span class=\"sm:ml-auto mt-1 sm:mt-0 text-xs text-gray-600\"\n                      >Required, integer only & maximum 3 characters</span\n                    >\n                  </label>\n                  <input\n                    id=\"validation-form-4\"\n                    v-model.trim=\"validate.age.$model\"\n                    type=\"number\"\n                    name=\"age\"\n                    class=\"form-control\"\n                    :class=\"{ 'border-theme-6': validate.age.$error }\"\n                    placeholder=\"21\"\n                  />\n                  <template v-if=\"validate.age.$error\">\n                    <div\n                      v-for=\"(error, index) in validate.age.$errors\"\n                      :key=\"index\"\n                      class=\"text-theme-6 mt-2\"\n                    >\n                      {{ error.$message }}\n                    </div>\n                  </template>\n                </div>\n                <div class=\"input-form mt-3\">\n                  <label\n                    for=\"validation-form-5\"\n                    class=\"form-label w-full flex flex-col sm:flex-row\"\n                  >\n                    Profile URL\n                    <span class=\"sm:ml-auto mt-1 sm:mt-0 text-xs text-gray-600\"\n                      >Optional, URL format</span\n                    >\n                  </label>\n                  <input\n                    id=\"validation-form-5\"\n                    v-model.trim=\"validate.url.$model\"\n                    type=\"url\"\n                    name=\"url\"\n                    class=\"form-control\"\n                    :class=\"{ 'border-theme-6': validate.url.$error }\"\n                    placeholder=\"https://google.com\"\n                  />\n                  <template v-if=\"validate.url.$error\">\n                    <div\n                      v-for=\"(error, index) in validate.url.$errors\"\n                      :key=\"index\"\n                      class=\"text-theme-6 mt-2\"\n                    >\n                      {{ error.$message }}\n                    </div>\n                  </template>\n                </div>\n                <div class=\"input-form mt-3\">\n                  <label\n                    for=\"validation-form-6\"\n                    class=\"form-label w-full flex flex-col sm:flex-row\"\n                  >\n                    Comment\n                    <span class=\"sm:ml-auto mt-1 sm:mt-0 text-xs text-gray-600\"\n                      >Required, at least 10 characters</span\n                    >\n                  </label>\n                  <textarea\n                    id=\"validation-form-6\"\n                    v-model.trim=\"validate.comment.$model\"\n                    class=\"form-control\"\n                    :class=\"{ 'border-theme-6': validate.comment.$error }\"\n                    name=\"comment\"\n                    placeholder=\"Type your comments\"\n                  ></textarea>\n                  <template v-if=\"validate.comment.$error\">\n                    <div\n                      v-for=\"(error, index) in validate.comment.$errors\"\n                      :key=\"index\"\n                      class=\"text-theme-6 mt-2\"\n                    >\n                      {{ error.$message }}\n                    </div>\n                  </template>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary mt-5\">\n                  Register\n                </button>\n              </form>\n              <!-- END: Validation Form -->\n              <!-- BEGIN: Success Notification Content -->\n              <div\n                id=\"success-notification-content\"\n                class=\"toastify-content hidden flex\"\n              >\n                <CheckCircleIcon class=\"text-theme-9\" />\n                <div class=\"ml-4 mr-4\">\n                  <div class=\"font-medium\">Registration success!</div>\n                  <div class=\"text-gray-600 mt-1\">\n                    Please check your e-mail for further info!\n                  </div>\n                </div>\n              </div>\n              <!-- END: Success Notification Content -->\n              <!-- BEGIN: Failed Notification Content -->\n              <div\n                id=\"failed-notification-content\"\n                class=\"toastify-content hidden flex\"\n              >\n                <XCircleIcon class=\"text-theme-6\" />\n                <div class=\"ml-4 mr-4\">\n                  <div class=\"font-medium\">Registration failed!</div>\n                  <div class=\"text-gray-600 mt-1\">\n                    Please check the fileld form.\n                  </div>\n                </div>\n              </div>\n              <!-- END: Failed Notification Content -->\n            </div>\n            <div class=\"source-code hidden\">\n              <button\n                data-target=\"#copy-form-validation\"\n                class=\"copy-code btn py-1 px-2 btn-outline-secondary\"\n              >\n                <FileIcon class=\"w-4 h-4 mr-2\" /> Copy example code\n              </button>\n              <div class=\"overflow-y-auto mt-3 rounded-md\">\n                <Highlight id=\"copy-form-validation\" class=\"source-preview\">\n                  <code\n                    class=\"text-xs p-0 rounded-md html pl-5 pt-8 pb-4 -mb-10 -mt-10\"\n                  >\n                    <textarea>\n                      const formData = reactive({\n                        name: \"\",\n                        email: \"\",\n                        password: \"\",\n                        age: \"\",\n                        url: \"\",\n                        comment: \"\"\n                      });\n                      const rules = {\n                        name: {\n                          required,\n                          minLength: minLength(2)\n                        },\n                        email: {\n                          required,\n                          email\n                        },\n                        password: {\n                          required,\n                          minLength: minLength(6)\n                        },\n                        age: {\n                          required,\n                          integer,\n                          maxLength: maxLength(3)\n                        },\n                        url: {\n                          url\n                        },\n                        comment: {\n                          required,\n                          minLength: minLength(10)\n                        }\n                      };\n                      const validate = useVuelidate(rules, toRefs(formData));\n                      const save = () => {\n                        validate.value.$touch();\n                        console.log(validate.value);\n                        if (validate.value.$invalid) {\n                          Toastify({\n                            text: \"Registration failed, please check the fileld form.\",\n                            duration: 3000,\n                            newWindow: true,\n                            close: true,\n                            gravity: \"top\",\n                            position: \"right\",\n                            backgroundColor: \"#D32929\",\n                            stopOnFocus: true,\n                            className: \"toastify-content\"\n                          }).showToast();\n                        } else {\n                          Toastify({\n                            text: \"Registration success!\",\n                            duration: 3000,\n                            newWindow: true,\n                            close: true,\n                            gravity: \"top\",\n                            position: \"right\",\n                            backgroundColor: \"#91C714\",\n                            stopOnFocus: true,\n                            className: \"toastify-content\"\n                          }).showToast();\n                        }\n                      };\n                    </textarea>\n                  </code>\n                </Highlight>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- END: Form Validation -->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, reactive, toRefs } from 'vue'\nimport {\n  required,\n  minLength,\n  maxLength,\n  email,\n  url,\n  integer\n} from '@vuelidate/validators'\nimport { useVuelidate } from '@vuelidate/core'\nimport Toastify from 'toastify-js'\n\nexport default defineComponent({\n  setup() {\n    const formData = reactive({\n      name: '',\n      email: '',\n      password: '',\n      age: '',\n      url: '',\n      comment: ''\n    })\n    const rules = {\n      name: {\n        required,\n        minLength: minLength(2)\n      },\n      email: {\n        required,\n        email\n      },\n      password: {\n        required,\n        minLength: minLength(6)\n      },\n      age: {\n        required,\n        integer,\n        maxLength: maxLength(3)\n      },\n      url: {\n        url\n      },\n      comment: {\n        required,\n        minLength: minLength(10)\n      }\n    }\n    const validate = useVuelidate(rules, toRefs(formData))\n    const save = () => {\n      validate.value.$touch()\n      if (validate.value.$invalid) {\n        Toastify({\n          node: cash('#failed-notification-content')\n            .clone()\n            .removeClass('hidden')[0],\n          duration: 3000,\n          newWindow: true,\n          close: true,\n          gravity: 'top',\n          position: 'right',\n          stopOnFocus: true\n        }).showToast()\n      } else {\n        Toastify({\n          node: cash('#success-notification-content')\n            .clone()\n            .removeClass('hidden')[0],\n          duration: 3000,\n          newWindow: true,\n          close: true,\n          gravity: 'top',\n          position: 'right',\n          stopOnFocus: true\n        }).showToast()\n      }\n    }\n\n    return {\n      validate,\n      formData,\n      save\n    }\n  }\n})\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}