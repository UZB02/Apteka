{"remainingRequest":"D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\node_modules\\vue-loader\\dist\\index.js??ruleSet[0].use[1]!D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\src\\global-components\\tom-select\\Main.vue?vue&type=template&id=5c9d44f9","dependencies":[{"path":"D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\src\\global-components\\tom-select\\Main.vue","mtime":1703608213719},{"path":"D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\node_modules\\babel-loader\\lib\\index.js","mtime":1703608333290},{"path":"D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\node_modules\\vue-loader\\dist\\templateLoader.js","mtime":1703608336250},{"path":"D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1703608331461},{"path":"D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\node_modules\\vue-loader\\dist\\index.js","mtime":1703608334745}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPHNlbGVjdCB2LXNlbGVjdD0ieyBwcm9wcywgZW1pdCwgY29tcHV0ZWRPcHRpb25zIH0iIGNsYXNzPSJ0b20tc2VsZWN0Ij4KICAgIDxzbG90Pjwvc2xvdD4KICA8L3NlbGVjdD4K"},{"version":3,"sources":["D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\src\\global-components\\tom-select\\Main.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"D:/Apteka Vue/Pharmacy-main/Pharmacy-main/src/global-components/tom-select/Main.vue","sourceRoot":"","sourcesContent":["<template>\n  <select v-select=\"{ props, emit, computedOptions }\" class=\"tom-select\">\n    <slot></slot>\n  </select>\n</template>\n\n<script>\nimport { defineComponent, computed, watch } from 'vue'\nimport { setValue, init, reInit } from './index'\n\nexport default defineComponent({\n  directives: {\n    select: {\n      mounted(el, { value }) {\n        // Clone the select element to prevent tom select remove the original element\n        const clonedEl = cash(el)\n          .clone()\n          .insertAfter(el)[0]\n        cash(el).attr('hidden', true)\n\n        // Initialize tom select\n        setValue(clonedEl, value.props)\n        init(clonedEl, value.emit, value.computedOptions)\n      },\n      updated(el, { value }) {\n        const clonedEl = cash(el).next()[0]\n        setValue(clonedEl, value.props)\n        reInit(clonedEl, value.props, value.emit, value.computedOptions)\n      }\n    }\n  },\n  props: {\n    options: {\n      type: Object,\n      default() {\n        return {}\n      }\n    },\n    modelValue: {\n      type: [String, Number, Array],\n      default: ''\n    }\n  },\n  setup(props, context) {\n    // Compute all default options\n    const computedOptions = computed(() => {\n      let options = {\n        ...props.options,\n        plugins: {\n          dropdown_input: {},\n          ...props.options.plugins\n        }\n      }\n\n      if (Array.isArray(props.modelValue)) {\n        options = {\n          persist: false,\n          create: true,\n          onDelete: function(values) {\n            return confirm(\n              values.length > 1\n                ? 'Are you sure you want to remove these ' +\n                    values.length +\n                    ' items?'\n                : 'Are you sure you want to remove \"' + values[0] + '\"?'\n            )\n          },\n          ...options,\n          plugins: {\n            remove_button: {\n              title: 'Remove this item'\n            },\n            ...options.plugins\n          }\n        }\n      }\n\n      return options\n    })\n\n    // Watch value change\n    watch(\n      computed(() => props.modelValue),\n      () => {\n        context.emit('change')\n      }\n    )\n\n    return {\n      props,\n      ...context,\n      computedOptions\n    }\n  }\n})\n</script>\n"]}]}