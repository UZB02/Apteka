{"remainingRequest":"D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\node_modules\\vue-loader\\dist\\index.js??ruleSet[0].use[1]!D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\src\\global-components\\tippy-content\\Main.vue?vue&type=template&id=ec564c80","dependencies":[{"path":"D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\src\\global-components\\tippy-content\\Main.vue","mtime":1703608213593},{"path":"D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\node_modules\\babel-loader\\lib\\index.js","mtime":1703608333290},{"path":"D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\node_modules\\vue-loader\\dist\\templateLoader.js","mtime":1703608336250},{"path":"D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1703608331461},{"path":"D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\node_modules\\vue-loader\\dist\\index.js","mtime":1703608334745}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiByZWY9InRpcHB5UmVmIj4KICAgIDxzbG90Pjwvc2xvdD4KICA8L2Rpdj4K"},{"version":3,"sources":["D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\src\\global-components\\tippy-content\\Main.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC","file":"D:/Apteka Vue/Pharmacy-main/Pharmacy-main/src/global-components/tippy-content/Main.vue","sourceRoot":"","sourcesContent":["<template>\n  <div ref=\"tippyRef\">\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, ref, inject, onMounted } from 'vue'\nimport tippy, { roundArrow, animateFill } from 'tippy.js'\n\nexport default defineComponent({\n  props: {\n    to: {\n      type: String,\n      default: 'span'\n    },\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    refKey: {\n      type: String,\n      default: null\n    }\n  },\n  setup(props) {\n    const tippyRef = ref()\n    const init = () => {\n      tippy(`[name=\"${props.to}\"]`, {\n        plugins: [animateFill],\n        content: tippyRef.value,\n        allowHTML: true,\n        arrow: roundArrow,\n        popperOptions: {\n          modifiers: [\n            {\n              name: 'preventOverflow',\n              options: {\n                rootBoundary: 'viewport'\n              }\n            }\n          ]\n        },\n        animateFill: false,\n        animation: 'shift-away',\n        theme: 'light',\n        trigger: 'click',\n        ...props.options\n      })\n    }\n\n    const bindInstance = () => {\n      if (props.refKey) {\n        const bind = inject(`bind[${props.refKey}]`)\n        if (bind) {\n          bind(tippyRef.value)\n        }\n      }\n    }\n\n    onMounted(() => {\n      init()\n      bindInstance()\n    })\n\n    return {\n      tippyRef\n    }\n  }\n})\n</script>\n"]}]}