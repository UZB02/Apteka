{"remainingRequest":"D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\node_modules\\vue-loader\\dist\\index.js??ruleSet[0].use[1]!D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\src\\global-components\\tiny-slider\\Main.vue?vue&type=template&id=25c872c2","dependencies":[{"path":"D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\src\\global-components\\tiny-slider\\Main.vue","mtime":1703608213483},{"path":"D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\node_modules\\babel-loader\\lib\\index.js","mtime":1703608333290},{"path":"D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\node_modules\\vue-loader\\dist\\templateLoader.js","mtime":1703608336250},{"path":"D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1703608331461},{"path":"D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\node_modules\\vue-loader\\dist\\index.js","mtime":1703608334745}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiByZWY9InNsaWRlclJlZiIgdi1zbGlkZXI9InsgcHJvcHMsIGVtaXQgfSIgY2xhc3M9InRpbnktc2xpZGVyIj4KICAgIDxzbG90Pjwvc2xvdD4KICA8L2Rpdj4K"},{"version":3,"sources":["D:\\Apteka Vue\\Pharmacy-main\\Pharmacy-main\\src\\global-components\\tiny-slider\\Main.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC","file":"D:/Apteka Vue/Pharmacy-main/Pharmacy-main/src/global-components/tiny-slider/Main.vue","sourceRoot":"","sourcesContent":["<template>\n  <div ref=\"sliderRef\" v-slider=\"{ props, emit }\" class=\"tiny-slider\">\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, inject, onMounted, ref } from 'vue'\nimport { init, reInit } from './index'\n\nexport default defineComponent({\n  directives: {\n    slider: {\n      mounted(el, { value }) {\n        init(el, value.props)\n      },\n      updated(el) {\n        reInit(el)\n      }\n    }\n  },\n  props: {\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    refKey: {\n      type: String,\n      default: null\n    }\n  },\n  setup(props, context) {\n    const sliderRef = ref()\n    const bindInstance = () => {\n      if (props.refKey) {\n        const bind = inject(`bind[${props.refKey}]`)\n        if (bind) {\n          bind(sliderRef.value)\n        }\n      }\n    }\n\n    onMounted(() => {\n      bindInstance()\n    })\n\n    return {\n      props,\n      ...context,\n      sliderRef\n    }\n  }\n})\n</script>\n"]}]}